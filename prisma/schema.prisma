generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:temp.db"
}

model Variable {
  id        String  @id @unique
  value     String?
  createdAt BigInt  @default(dbgenerated("(cast(1000 * unixepoch('subsec') as integer))"))
  updatedAt BigInt  @default(dbgenerated("(cast(1000 * unixepoch('subsec') as integer))"))

  @@index([createdAt])
  @@index([updatedAt])
}

model Game {
  id            String  @id
  save          String
  preview       String?
  name          String?
  turns         Int     @default(0)
  currentPlayer String?
  playerId      String?
  createdAt     BigInt  @default(dbgenerated("(cast(1000 * unixepoch('subsec') as integer))"))
  updatedAt     BigInt  @default(dbgenerated("(cast(1000 * unixepoch('subsec') as integer))"))

  players UsersInGame[]

  @@index([playerId])
  @@index([createdAt])
  @@index([updatedAt])
}

model User {
  id        String @id
  createdAt BigInt @default(dbgenerated("(cast(1000 * unixepoch('subsec') as integer))"))

  games    UsersInGame[]
  profiles UsersInProfile[]

  @@index([createdAt])
}

model UsersInGame {
  id        Int    @id @default(autoincrement())
  gameId    String
  userId    String
  createdAt BigInt @default(dbgenerated("(cast(1000 * unixepoch('subsec') as integer))"))

  game Game @relation(fields: [gameId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@unique([userId, gameId])
  @@index([createdAt])
}

model Profile {
  id            Int     @id @default(autoincrement())
  discordId     BigInt?
  rating        Float   @default(1000)
  dmChannel     BigInt?
  notifications String  @default("enabled")
  createdAt     BigInt  @default(dbgenerated("(cast(1000 * unixepoch('subsec') as integer))"))
  updatedAt     BigInt  @default(dbgenerated("(cast(1000 * unixepoch('subsec') as integer))"))

  users UsersInProfile[]

  @@index([createdAt])
  @@index([updatedAt])
  @@index([discordId])
  @@index([dmChannel])
}

model UsersInProfile {
  id        Int    @id @default(autoincrement())
  userId    String @unique
  profileId Int
  createdAt BigInt @default(dbgenerated("(cast(1000 * unixepoch('subsec') as integer))"))

  user    User    @relation(fields: [userId], references: [id])
  profile Profile @relation(fields: [profileId], references: [id])

  @@unique([userId, profileId])
  @@index([profileId])
  @@index([createdAt])
}

model ErrorLog {
  id        Int     @id @default(autoincrement())
  type      String
  message   String?
  createdAt BigInt  @default(dbgenerated("(cast(1000 * unixepoch('subsec') as integer))"))

  @@index([createdAt])
}
